# Quartermaster Roll Call workflow
# - Triggers: run on push to main and manual dispatch so the crew can call it anytime.
# - Job: uses Ubuntu with Python 3.11 to match the ship's simple needs.
# - Steps: checkout code, optionally install tools, then run the roll call script from its folder.
name: Quartermaster Roll Call

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-quartermaster:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download previous wagon database
        uses: actions/download-artifact@v4
        with:
          name: wagon-database
          path: quartermaster
        continue-on-error: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Database setup
        run: |
          echo "::group::Database setup"
          python inventory_setup.py
          echo "::endgroup::"
        working-directory: quartermaster

      - name: Quartermaster operations
        run: |
          echo "::group::Quartermaster operations"
          python quartermaster.py
          echo "::endgroup::"
        working-directory: quartermaster

      - name: Ledger review
        run: |
          echo "::group::Ledger review"
          python ledger_review.py
          echo "::endgroup::"
        working-directory: quartermaster

      - name: Generate and display report
        run: |
          echo "::group::Quartermaster summary report"
          python - <<'EOF'
          import datetime
          import sqlite3

          conn = sqlite3.connect('wagon.db')
          cur = conn.cursor()

          report_lines = []
          report_lines.append(f"# Quartermaster Report ({datetime.datetime.utcnow().isoformat()} UTC)")
          report_lines.append("\n## Inventory\n")
          report_lines.append("| Item | Quantity | Description |\n|------|-----------|-------------|")

          for row in cur.execute("SELECT item, quantity, description FROM items"):
              report_lines.append(f"| {row[0]} | {row[1]} | {row[2]} |")

          report_lines.append("\n## Ledger (latest 20 entries)\n")
          report_lines.append("| ID | Timestamp | Action | Item | Qty Change | Description |\n|----|------------|--------|------|-------------|-------------|")

          for row in cur.execute(
              "SELECT id, timestamp, action, item, quantity_change, description FROM ledger ORDER BY id DESC LIMIT 20"
          ):
              report_lines.append(
                  f"| {row[0]} | {row[1]} | {row[2]} | {row[3]} | {row[4]} | {row[5]} |"
              )

          conn.close()

          report_text = "\n".join(report_lines)
          print(report_text)

          with open('report.md', 'w') as report_file:
              report_file.write(report_text)

          print("\nQuartermaster: Report generation complete.")
          EOF
          echo "::endgroup::"
        working-directory: quartermaster

      - name: Upload wagon database
        uses: actions/upload-artifact@v4
        with:
          name: wagon-database
          path: quartermaster/wagon.db

      - name: Upload readable report
        uses: actions/upload-artifact@v4
        with:
          name: readable-report
          path: quartermaster/report.md
